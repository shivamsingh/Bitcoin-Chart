apply plugin: 'com.android.application'

android {
    def androidVersions = rootProject.ext.android

    compileSdkVersion androidVersions.compileSdkVersion
    buildToolsVersion androidVersions.buildToolsVersion

    defaultConfig {
        minSdkVersion androidVersions.minSdkVersion
        targetSdkVersion androidVersions.targetSdkVersion
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "BLOCKCHAIN_API_URL", blockchain_endpoint_url
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    def commonDependencies = rootProject.ext.commonDependencies
    def commonTestDependencies = rootProject.ext.commonTestDependencies

    // Android
    api commonDependencies.supportAppCompatV7
    api commonDependencies.supportV13
    api commonDependencies.supportAnnotation
    api commonDependencies.supportCardView
    api commonDependencies.supportRecyclerView
    api commonDependencies.constraintLayout
    api commonDependencies.supportDesign

    // Architecture components
    api commonDependencies.archLifecycleRuntime
    api commonDependencies.archLifecycleExtensions
    annotationProcessor commonDependencies.archLifecycleCompiler
    testAnnotationProcessor commonDependencies.archLifecycleCompiler

    // Room
    implementation commonDependencies.roomRuntime
    annotationProcessor commonDependencies.roomCompiler
    androidTestImplementation commonDependencies.roomTesting

    // Dagger 2
    api commonDependencies.dagger2
    annotationProcessor commonDependencies.dagger2Compiler
    api commonDependencies.dagger2Android
    api commonDependencies.dagger2AndroidSupport
    annotationProcessor commonDependencies.dagger2AndroidCompiler
    testAnnotationProcessor commonDependencies.dagger2Compiler
    compileOnly commonDependencies.javaxAnnotation

    // RxJava 2
    api commonDependencies.rxJava2
    api commonDependencies.rxAndroid

    // Networking
    api commonDependencies.okHttp
    api commonDependencies.okHttpInterceptor

    // Picasso
    api commonDependencies.picasso

    // Networking Retrofit
    api commonDependencies.retrofit2
    api commonDependencies.retrofitRxAdapter
    api commonDependencies.retrofitConverter

    // Gson
    api commonDependencies.gson

    // Auto-Value
    compileOnly commonDependencies.autoValue
    annotationProcessor commonDependencies.autoValue
    testAnnotationProcessor commonDependencies.autoValue
    androidTestAnnotationProcessor commonDependencies.autoValue

    // AutoValue Type Adapter
    compileOnly commonDependencies.autoValueGson
    annotationProcessor commonDependencies.autoValueGson
    testAnnotationProcessor commonDependencies.autoValueGson
    androidTestAnnotationProcessor commonDependencies.autoValueGson

    // Optionals
    api commonDependencies.options

    // Timber
    api commonDependencies.timber

    // Chart
    api commonDependencies.chart

    // Stetho
    implementation developmentDependencies.stetho
    implementation developmentDependencies.stethoOkHttp

    // Leak Canary
    debugImplementation developmentDependencies.leakcanary
    releaseImplementation developmentDependencies.leakcanaryNoOp
    testImplementation developmentDependencies.leakcanaryNoOp

    // Chuck
    debugImplementation developmentDependencies.chuck
    releaseImplementation developmentDependencies.chuckNoOp
    testImplementation developmentDependencies.chuckNoOp

    // Unit testing
    testImplementation commonTestDependencies.junit
    testImplementation commonTestDependencies.assertj
    testImplementation commonTestDependencies.mockito
    testImplementation commonTestDependencies.archTest
}
